<!DOCTYPE html>
<html ng-app="app" ng-init = "lang='mar'">
	<head>
	  	<meta charset="utf-8">
	  	<meta name="viewport" content="width=device-width, initial-scale=1">
	    <title>Settings</title>
	    <link rel="stylesheet" href="/stylesheets/numpad.css" />
		<link href="/stylesheets/bootstrap.min.css" rel="stylesheet"/>
		<link href="/bower_components/bootstrap-toggle/css/bootstrap-toggle.min.css" rel="stylesheet"/>
	    <script src="/javascripts/jquery-1.11.2.min.js" type="text/javascript"></script>
	    <script src="/bower_components/angular/angular.js"></script>
	    <script src="/bower_components/ng-file-upload/ng-file-upload.min.js"></script>
	    <script src="/bower_components/angular-route/angular-route.min.js"></script>
		<script src="/javascripts/js.cookie-2.1.1.min.js" type="text/javascript"></script>
		 
	    <script src="/bower_components/angular-cookies/angular-cookies.js"></script>
		<script src="/bower_components/angular-bootstrap/ui-bootstrap.min.js"></script>
		<script type="text/javascript" src="/javascripts/navbar.js"></script>
		
		<script src="/bower_components/bootstrap-toggle/js/bootstrap-toggle.min.js"></script>
		<script src="/javascripts/numpad.js" type="text/javascript"></script>
		<script src="/javascripts/includes.js" type="text/javascript"></script>

		<style type="text/css">
			body {
			   font-size: 22px;
			}
			.fa-spin-custom, .glyphicon-spin {
    -webkit-animation: spin 1000ms infinite linear;
    animation: spin 1000ms infinite linear;
}
@-webkit-keyframes spin {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg);
    }
}
@keyframes spin {
    0% {
        -webkit-transform: rotate(0deg);
        transform: rotate(0deg);
    }
    100% {
        -webkit-transform: rotate(359deg);
        transform: rotate(359deg);
    }
}
		</style>
  	</head>
	<body>		
		<ng-view></ng-view>

		<script type="text/ng-template" id="/home.html">
			<navbar></navbar>
			<div class="jumbotron">
				<h2>Settings :</h2>
				<button class="button btn-lg btn-primary" onclick="window.location.href='#/backup_restore'">
					{{l.BackupandRestore.val}}
				</button>
				<button class="button btn-lg btn-primary" onclick="window.location.href='#/translation'">
					{{l.Translation.val}}
				</button>
				
				<button class="button btn-lg btn-danger" ng-click="reset()">
					Factory Reset
				</button>
				<br><br>
				<button class="btn btn-md btn-warning" onclick="window.location.href='/api/backup/factory'">
						Temporary Button for factory image factory.tar
				</button>
			</div>
			<div id="resetProgress" style="display:none;background-color: rgba(0,0,0,0.8);position:fixed;left:0px;right:0px;top:0px;bottom:0px;z-index:99999;color:#fff;padding-top:60px" class="text-center">
				<span class="h1">
					<span class="text">Factory Resetting ...<br>Pleast wait.</span>
					<span class="glyphicon glyphicon-refresh glyphicon-spin"/>
				</span>
			</div>
		</script>
		
		<script type="text/ng-template" id="/backup_restore.html">
			<navbar></navbar>
			<div class="container">
				<h1>{{l.Everything.val}}</h1>
				<h5>
					{{l.Filenamesshouldbelikethis.val}}
					<font size=+1>
						<b>
							'backup-***.tar'
						</b>
					</font>
					<span class="text-danger">
						{{l.DonotuploadanyothertypeoffileinRestoreitwillbreakthesoftware.val}}
					</span>
				</h5>
				<div class="row text-center">
					<div class="col-xs-6">
						<button class="btn btn-lg btn-primary" onclick="window.location.href='/api/backup'">
							{{l.BackupEverything.val}}
						</button>
					</div>
					<div class="col-xs-6">
						<button class="btn btn-lg btn-primary" ngf-select="uploadFiles($file, invalidFiles)" accept="application/x-tar">
							{{l.RestoreEverything.val}}
						</button>
						<br>
						<div style="font:smaller">
							{{f1.name}}
			  				<span class="progress" style="margin:10px;height:1.3em;width : 200px;" ng-show="(f1.progress >= 0 && f1.progress < 100)">
			      				<div style="width:{{f1.progress}}%" ng-bind="f1.progress + '%'"></div>
			  				</span>
			  				<div class="text-danger">
			  					{{errorMsg1}}
			  				</div>
			  				<div class="text-success">
			  					{{f1.result}}
			  				</div>
						</div>
					</div>
				</div>
				<br>
				<h1>{{l.OnlySetup.val}}({{l.NoStocksalesbills.val}})</h1>
				<h5>
					{{l.Filenamesshouldbelikethis.val}}
					<font size=+1>
						<b>
							'default-***.tar'
						</b>
					</font>
					<span class="text-danger">
						{{l.DonotuploadanyothertypeoffileinRestoreitwillbreakthesoftware.val}}
					</span>
				</h5>
				<div class="row text-center">
					<div class="col-xs-6">
						<button class="btn btn-primary" onclick="window.location.href='/api/backup/default'">
							{{l.BackuponlySetup.val}}
						</button>
					</div>
					<div class="col-xs-6">
						<button class="btn btn-primary" ngf-select="uploadFiles2($file, invalidFiles)" accept="application/x-tar">
							{{l.RestoreonlySetup.val}}
						</button>
						<br>
						<div style="font:smaller">
							{{f2.name}}
			  				<span class="progress" style="margin:10px;height:1.3em;width : 200px;" ng-show="(f2.progress >= 0 && f2.progress < 100)">
			      				<div style="width:{{f2.progress}}%" ng-bind="f2.progress + '%'"></div>
			  				</span>
			  				<div class="text-danger">
			  					{{errorMsg2}}
			  				</div>
			  				<div class="text-success">
			  					{{f2.result}}
			  				</div>
						</div>
					</div>
				</div>
			</div>
			<style>
				.thumb {
				    width: 24px;
				    height: 24px;
				    float: none;
				    position: relative;
				    top: 7px;
				}

				form .progress {
				    line-height: 15px;
				}

				.progress {
				    display: inline-block;
				    width: 100px;
				    border: 3px groove #CCC;
				}

				.progress div {
				    font-size: smaller;
				    background: orange;
				    width: 0;
				}
			</style>
		</script>
		
		<script type="text/ng-template" id="/translation.html">
			<style>
			 	.item{
			 		background-color: #eaefff;
			 	}
			</style>
			<navbar>
				<div class="row" style="line-height:1.7em;font-size:1.4em;color: #ccc">
					<span class="col-xs-2">
						Translation
					</span>
				</div>
			</navbar>

			<span class="text-center" style="color:#ccc;font-size:1em;line-height: 1em;padding-top: 12px;position:fixed;width:70%;top:0.01em;z-index:99999;margin-left:10%">
				<label>
					Search: 
					<input ng-model="searchText" type="text" style="color:black;margin-left:15px">
				</label>
			</span>

			<div class="container">
				<ul class="list-group" ng-repeat="
				word in arr | filter:searchText">
  					<li class="list-group-item row item">

  						<span class="col-xs-5">
  							English : {{word.eng}}
  						</span>
  						<span class="col-xs-5">
  							Marathi : {{word.mar}}
  						</span>
  						<span class="col-xs-1">
  							<button class="btn btn-warning" ng-click="edit($index, word._id)">
  								Edit&nbsp;&nbsp;
  								<span class="glyphicon glyphicon-pencil"></span>
  							</button>
  						</span>
  						<span class="col-xs-1">
  							<button ng-click="remove($index, word._id)" class="btn btn-danger">
  								Delete&nbsp;
  								<span class="glyphicon glyphicon-trash"></span>
  							</button>
  						</span>
  					</li>
  				</ul>
			</div>
			<div id="deleteProgress" style="display:none;background-color: rgba(0,0,0,0.8);position:fixed;left:0px;right:0px;top:0px;bottom:0px;z-index:99999;color:#fff;padding-top:60px" class="text-center">
				<span class="h1">
					<span class="text">Deleting ...</span>
					<span class="glyphicon glyphicon-refresh glyphicon-spin"/>
				</span>
			</div>
		</script>
		
		<script type="text/javascript">
			angular.module('app', [
				'ngRoute',
	    		'ui.bootstrap',
				'navbar',
				'ngFileUpload'
	    	])
	    	.config(['$routeProvider', function ($routeProvider) {
			    $routeProvider
					.when('/', {
			        	templateUrl: '/home.html',
			        	controller: 'homeController'
			      	})
			      	.when('/backup_restore', {
			        	templateUrl: '/backup_restore.html',
			        	controller: 'backResController'
			      	})
			      	.when('/translation', {
			        	templateUrl: '/translation.html',
			        	controller: 'translationController'
			      	})

			}])
			.controller('homeController', ['$scope', 'navbarSrv', '$http', function ($scope, navbar, $http) {
				navbar.setScope($scope);
				$scope.reset = function(){
					var a = confirm(
						"Are You Sure to Delete Everything?\n\n\n"+
						"Categories, Stocks, Sales, Bills\n\n\n"
					);
					if(a){
						$("#resetProgress").show();
						$http
							.put("/api/restore/reset")
							.success(function(data){
								$("#resetProgress .text").html(
									'<p class="text-success">'+
									data+
									'</p>'
								)
								setTimeout(function(){
									window.location.href = "/";
								},2000);
							})
							.error(function(data){
								$("#resetProgress .text").html(
									'<p class="text-danger">'+
									data+
									'</p>'
								)
							});
					}
				}
			}])
			.controller('backResController', ['$scope', 'navbarSrv', 'Upload', '$timeout', function ($scope, navbar, Upload, $timeout) {
				navbar.setScope($scope);
				$scope.uploadFiles = function(file, errFiles) {
			        $scope.f1 = file;
			        if (file) {
			            file.upload = Upload.upload({
			                url: 'api/restore/',
			                data: {file: file}
			            });

			            file.upload.then(function (response) {
			                $timeout(function () {
			                    file.result = response.data;
			                });
			            }, function (response) {
			                if (response.status > 0)
			                    $scope.errorMsg1 = response.status + ': ' + response.data;
			            }, function (evt) {
			                file.progress = Math.min(100, parseInt(100.0 * 
			                                         evt.loaded / evt.total));
			            });
			        }
				}
				$scope.uploadFiles2 = function(file, errFiles) {
			        $scope.f2 = file;
			        if (file) {
			            file.upload = Upload.upload({
			                url: 'api/restore/default',
			                data: {file: file}
			            });

			            file.upload.then(function (response) {
			                $timeout(function () {
			                    file.result = response.data;
			                });
			            }, function (response) {
			                if (response.status > 0)
			                    $scope.errorMsg2 = response.status + ': ' + response.data;
			            }, function (evt) {
			                file.progress = Math.min(100, parseInt(100.0 * 
			                                         evt.loaded / evt.total));
			            });
			        }
				}
				
			}])
			.controller('translationController', ['$scope', '$http', 'navbarSrv', function ($scope, $http, navbar) {
				//navbar.setScope($scope);
				$scope.arr = [];
				$http
				.get("/api/localize")
				.success(function(data) {
					$scope.arr=data;
				}).error(function(err) {
					console.error(data);
				});
				$scope.edit = function(index, id){
					var mar = prompt("Enter MARATHI for "+$scope.arr[index].eng);
					if(mar!=null){
						$("#deleteProgress .text").html("Editing ...");
						$("#deleteProgress").show();
						
						$http
							.put("/api/localize/"+id, {mar : mar})
							.success(function(){
								$scope.arr[index].mar = mar;
								$("#deleteProgress").hide();
							});
					}
				}
				$scope.remove = function(index, id){
					$("#deleteProgress .text").html("Deleting ...");
					$("#deleteProgress").show();
					$http
						.delete("/api/localize/"+id)
						.success(function(){
							$scope.arr.splice(index, 1);
							$("#deleteProgress").hide();
						})
				}
			}])
			.filter('toArray', function () {
			  return function (obj, addKey) {
			    if (!angular.isObject(obj)) return obj;
			    if ( addKey === false ) {
			      return Object.keys(obj).map(function(key) {
			        return obj[key];
			      });
			    } else {
			      return Object.keys(obj).map(function (key) {
			        var value = obj[key];
			        return angular.isObject(value) ?
			          Object.defineProperty(value, '$key', { enumerable: false, value: key}) :
			          { $key: key, $value: value };
			      });
			    }
			  };
			})
	    	
		</script>
	</body>
</html>